Git
- 버전관리 시스템의 종류

* 버전관리 
- 여러 파일을 하나의 버전으로 묶어 관리하는 것

버전관리 시스템의 종류
1. 클라이언트 - 서버 모델
    클라이언트 : 정보를 제공 받는 측
    서버 : 정보를 제공하는 측
    - 하나의 중앙 서버로 여러 클라이언트들이 각자 필요한 데이터만 가져와서 작업을 하고 다시 중앙 서버로 보내서 통합하는 방식
    - CVS, SVN

2. 분산 모델
    - 하나의 중앙 서버가 존재하지만 여러 클라이언트들은 각자의 컴퓨터 저장소에 전체 사본을 가지고 작업하는 방식
    - Git 

git의 장점 

1. 동시에 작업하는 사람들과 소스코드를 주고받을 필요가 없음
2. 같은 파일을 여러명이 동시에 병렬 개발이 가능
3. 변동 과정을 체계적으로 관리할 수 있고, 언제든지 지난 시점의 버전으로 되돌릴 수 있음
4. 인터넷이 연결되지 않은 곳에서도 개발을 진행할 수 있고, 중앙 서버의 데이터가 유실되어도
    다시 복구 할 수 있음

cmder 설치
터미널 기본 명령어
- 컨트롤 + L : 화면 클리어
- pwd : 현재 디렉토리 경로를 표시
- dir : 현재 디렉토리에 존재하는 디렉토리와 파일을 표시 -> ls
- cd : 다른 디렉토리로 이동



git 시작하기
- 구글에서 git 설치 검색
- 좌측 메뉴에서 다운로드 선택
- 자신의 운영체제에 맞는 프로그램을 다운로드


git 명령어
1. 프로젝트 폴더 내에 로컬 저장소를 생성
2. git에 버전 관리할 파일을 선택 -> add -> stage에 올림
    git add index.html
3. 하나의 버전으로 만들기 -> commit -> 커밋
    git commit -m "index.html 커밋"
4. 로그 확인하기
    git log

5. 여러 파일을 함께 선택 -> stage에 현재 디렉토리에 있는 모든 파일을 올림
git add .

6. 여러 파일을 커밋
    git commit -m "현재 디렉토리에 있는 모든 파일을 커밋"


git hub
- git으로 버전관리한 코드를 올릴 수 있는 클라우드 서비스
- 단순한 저장만 하는 것이 아니라 유저들과 함께 코드를 공유하고 온라인으로 하나의 프로그램을 같이 제작할 수 있게 만듬


7. git hub 저장소 만들기
- 왼쪽 메뉴의 Create repository 클릭

8. 로컬저장소에 github 저장소 주소 설정하기
    git remote add origin https://github.com/Nohgeonha/mysite.git

9. 만든 커밋(버전) github에 푸시
    git push -u origin main 또는
    git push -u origin master

10. github pages
- settings - 왼쪽 메뉴의 pages를 선택
- sourse를 master로 선택
- save를 클릭
